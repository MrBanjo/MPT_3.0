<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\HttpFoundation\Session\Session;

/**
 * CaddieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CaddieRepository extends EntityRepository
{
	public function getUserOrSession($user) 
	{
		$session = new Session;
		$identifiant = ($user) ? 'user' : 'identifiant';
		$identifiantvalue = ($user) ? $user : $session->getId();

		return ["id" => $identifiant, "value" => $identifiantvalue];
	}

	public function getAllProducts($user) 
	{
		$qb = $this->createQueryBuilder('a');
		$results = $qb
		->where('a.' . $this->getUserOrSession($user)["id"] . ' = :identifiant')
		->setParameter('identifiant', $this->getUserOrSession($user)["value"])
		->getQuery()
		->getResult();

		return $results;
	}

	public function switchSessionToUserProduct($user)
	{
		$session = new Session;
		$listecaddies = $this->getEntityManager()
		->createQuery('SELECT c From AppBundle:Caddie c WHERE c.identifiant = :identifiant')
		->setParameter('identifiant', $session->getId())
		->getResult();

		foreach ($listecaddies as $listecaddie) 
		{
            if (!$listecaddie->getUser() && $user) {
                $listecaddie->setUser($user);
                $this->getEntityManager()->persist($listecaddie);
            }
        }
      
        $this->getEntityManager()->flush();
	}

	public function getTotalPrix($user) 
	{
		$results = $this->getAllProducts($user);
		// Additionne les prix de chaque produits avec leur quantité
		$prixtotal = 0;	
		foreach($results as $result)
		{
			$prixtotal += ($result->getPrix())*($result->getQuantite());
		}

		return $prixtotal;
	}

/*	public function getProductCaddie($id, $productType, $user) 
	{
		// Récupere tous les objets produits du type demandé (menu,upsell etc)
		$results = $this->getEntityManager()
		->createQuery('SELECT c FROM AppBundle:Caddie c WHERE c.' . $this->getUserOrSession($user)["id"] . ' = :identifiant AND c.' . $productType . ' = :' . $productType .'')
		->setParameter('identifiant', $this->getUserOrSession($user)["value"])
		->setParameter($productType, $id)
		->getResult();

		return $results;
	}*/

	public function getProductCaddie($id, $productType, $user) 
	{
		$qb = $this->createQueryBuilder('a');
		$qb
		->where('a.' . $this->getUserOrSession($user)["id"] . ' = :identifiant')
		->setParameter('identifiant', $this->getUserOrSession($user)["value"])
		->andwhere('a.' . $productType . ' = :id')
		->setParameter('id', $id);

		return $qb->getQuery()->getResult();
	}

}
